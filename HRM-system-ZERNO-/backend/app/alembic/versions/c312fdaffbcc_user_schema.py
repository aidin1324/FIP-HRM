"""user schema

Revision ID: c312fdaffbcc
Revises: 1238e444e0bb
Create Date: 2024-12-20 22:49:22.097773

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c312fdaffbcc'
down_revision: Union[str, None] = '1238e444e0bb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # creating the schema private
    op.execute('CREATE SCHEMA private;')
    
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role'),
    schema='private'
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('second_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['private.roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    schema='private'
    )
    op.create_table('registration_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('second_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', name='statusenum'), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['private.users.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['private.roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    schema='private'
    )
    # ### end Alembic commands ###

    # add the initial roles
    op.execute(
        """
        INSERT INTO private.roles (role) 
        VALUES 
        ('admin'),
        ('user');
        """
    )

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('registration_requests', schema='private')
    op.drop_table('users', schema='private')
    op.drop_table('roles', schema='private')
    # ### end Alembic commands ###

    # drop the schema private
    op.execute('DROP SCHEMA private;')
    